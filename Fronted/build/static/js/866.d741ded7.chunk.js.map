{"version":3,"file":"static/js/866.d741ded7.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","views/tour/TourManual.jsx","../node_modules/@mui/material/Divider/dividerClasses.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: _extends({\n      color: (theme.vars || theme).palette.background.default\n    }, theme.vars ? {\n      backgroundColor: theme.vars.palette.Avatar.defaultBg\n    } : _extends({\n      backgroundColor: theme.palette.grey[400]\n    }, theme.applyStyles('dark', {\n      backgroundColor: theme.palette.grey[600]\n    })))\n  }]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      slots = {},\n      slotProps = {},\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: _extends({}, imgProps, slotProps.img)\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, _extends({}, imgSlotProps));\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import React from 'react';\r\nimport { Container, Typography, Box, Card, CardContent, Paper, Grid, TextField, Select, MenuItem, InputLabel, FormControl, Avatar, Button, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst RootContainer = styled(Container)(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    minHeight: '100vh',\r\n    padding: theme.spacing(2),\r\n}));\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n    maxWidth: 1200,\r\n    width: '100%',\r\n    marginTop: theme.spacing(4),\r\n    padding: theme.spacing(3),\r\n}));\r\n\r\nconst ExplanationBox = styled(Paper)(({ theme }) => ({\r\n    padding: theme.spacing(3),\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[3],\r\n    borderRadius: theme.shape.borderRadius,\r\n    marginLeft: theme.spacing(3),\r\n}));\r\n\r\nconst explanationTextLogin = `\r\nEste es el formulario de inicio de sesión de la aplicación. A continuación, se describe la funcionalidad de cada uno de los componentes:\r\n\r\nLogo: Este es el logo de la aplicación.\r\nDirección de correo electrónico: Aquí debes ingresar tu dirección de correo electrónico.\r\nContraseña: Aquí debes ingresar tu contraseña.\r\nBotón de inicio de sesión: Presiona este botón para iniciar sesión.\r\nEnlace para recuperar contraseña: Si olvidaste tu contraseña, haz clic aquí para recuperarla.\r\nEnlace para registrarse: Si no tienes una cuenta, puedes registrarte haciendo clic aquí.\r\nTérminos de uso y política de privacidad: Aquí puedes revisar los términos de uso y la política de privacidad.\r\n`;\r\n\r\nconst explanationTextPatient = `\r\nEste es el formulario para registrar un nuevo paciente. A continuación, se describe la funcionalidad de cada uno de los componentes:\r\n\r\nNombre: Aquí debes ingresar el nombre del paciente.\r\nApellido paterno: Aquí debes ingresar el apellido paterno del paciente.\r\nApellido materno: Aquí debes ingresar el apellido materno del paciente.\r\nCorreo: Aquí debes ingresar el correo electrónico del paciente.\r\nNúmero de teléfono: Aquí debes ingresar el número de teléfono del paciente.\r\nFecha de nacimiento: Aquí debes ingresar la fecha de nacimiento del paciente.\r\nSexo: Aquí debes seleccionar el sexo del paciente.\r\nActividad física: Aquí debes seleccionar el nivel de actividad física del paciente.\r\nPeso: Aquí debes ingresar el peso del paciente en kilogramos.\r\nAltura: Aquí debes ingresar la altura del paciente en centímetros.\r\nCircunferencia del brazo: Aquí debes ingresar la circunferencia del brazo del paciente en centímetros.\r\nPliegue cutáneo del tríceps: Aquí debes ingresar el pliegue cutáneo del tríceps del paciente en milímetros.\r\nÁcido úrico: Aquí debes ingresar el nivel de ácido úrico del paciente en mg/dL.\r\nAlbúmina: Aquí debes ingresar el nivel de albúmina del paciente en g/dL.\r\nColesterol: Aquí debes ingresar el nivel de colesterol del paciente en mg/dL.\r\nGlobulina: Aquí debes ingresar el nivel de globulina del paciente en g/dL.\r\nHematocrito: Aquí debes ingresar el nivel de hematocrito del paciente en %.\r\nProteínas totales: Aquí debes ingresar el nivel de proteínas totales del paciente en g/dL.\r\nTensión diastólica: Aquí debes ingresar la tensión diastólica del paciente en mmHg.\r\nTriglicéridos: Aquí debes ingresar el nivel de triglicéridos del paciente en mg/dL.\r\nHidratos de carbono (HCO2 totales): Ejemplo: Pan, arroz, pasta.\r\nKilo calorías (KLCA totales): Ejemplo: Energía total consumida en la dieta.\r\nLípidos totales: Ejemplo: Aceite de oliva, aguacate.\r\nAlimentos de origen animal altos en grasa (AOA AAG): Ejemplo: Carne de res, carne de cerdo.\r\nAlimentos de origen animal bajos en grasa (AOA BAG): Ejemplo: Pollo sin piel, pescado.\r\nAlimentos de origen animal muy bajos en grasa (AOA MBAG): Ejemplo: Claras de huevo, pescado magro.\r\nAlimentos de origen animal con mediana cantidad de grasa (AOA MAG): Ejemplo: Yogur natural, leche semidescremada.\r\nAceites con proteína (Aceites C/P): Ejemplo: Aceite de soya, aceite de linaza.\r\nAceites sin proteína (Aceites S/P): Ejemplo: Aceite de oliva, aceite de girasol.\r\nAzúcar sin grasa (Azúcar S/G): Ejemplo: Azúcar blanca, miel.\r\nCereales con grasa (Cereales C/G): Ejemplo: Galletas, pasteles.\r\nCereales sin grasa (Cereales S/G): Ejemplo: Pan integral, arroz integral.\r\nFrutas: Ejemplo: Manzana, plátano.\r\nLeche con azúcar (Leche C/A): Ejemplo: Leche con chocolate.\r\nLeche descremada (Leche Des): Ejemplo: Leche descremada.\r\nLeche entera: Ejemplo: Leche entera.\r\nLeche semi descremada (Leche Semi): Ejemplo: Leche semidescremada.\r\nLeguminosas: Ejemplo: Frijoles, lentejas.\r\nVerduras: Ejemplo: Espinacas, zanahorias.\r\n`;\r\n\r\nconst glossaryData = [\r\n    { nombre: \"Hidratos de carbono\", abreviatura: \"HCO2 totales\", definicion: \"Ejemplo: Pan, arroz, pasta.\" },\r\n    { nombre: \"Kilo calorías\", abreviatura: \"KLCA totales\", definicion: \"Ejemplo: Energía total consumida en la dieta.\" },\r\n    { nombre: \"Lípidos totales\", abreviatura: \"\", definicion: \"Ejemplo: Aceite de oliva, aguacate.\" },\r\n    { nombre: \"Alimentos de origen animal altos en grasa\", abreviatura: \"AOA AAG\", definicion: \"Ejemplo: Carne de res, carne de cerdo.\" },\r\n    { nombre: \"Alimentos de origen animal bajos en grasa\", abreviatura: \"AOA BAG\", definicion: \"Ejemplo: Pollo sin piel, pescado.\" },\r\n    { nombre: \"Alimentos de origen animal muy bajos en grasa\", abreviatura: \"AOA MBAG\", definicion: \"Ejemplo: Claras de huevo, pescado magro.\" },\r\n    { nombre: \"Alimentos de origen animal con mediana cantidad de grasa\", abreviatura: \"AOA MAG\", definicion: \"Ejemplo: Yogur natural, leche semidescremada.\" },\r\n    { nombre: \"Aceites con proteína\", abreviatura: \"Aceites C/P\", definicion: \"Ejemplo: Aceite de soya, aceite de linaza.\" },\r\n    { nombre: \"Aceites sin proteína\", abreviatura: \"Aceites S/P\", definicion: \"Ejemplo: Aceite de oliva, aceite de girasol.\" },\r\n    { nombre: \"Azúcar sin grasa\", abreviatura: \"Azúcar S/G\", definicion: \"Ejemplo: Azúcar blanca, miel.\" },\r\n    { nombre: \"Cereales con grasa\", abreviatura: \"Cereales C/G\", definicion: \"Ejemplo: Galletas, pasteles.\" },\r\n    { nombre: \"Cereales sin grasa\", abreviatura: \"Cereales S/G\", definicion: \"Ejemplo: Pan integral, arroz integral.\" },\r\n    { nombre: \"Frutas\", abreviatura: \"\", definicion: \"Ejemplo: Manzana, plátano.\" },\r\n    { nombre: \"Leche con azúcar\", abreviatura: \"Leche C/A\", definicion: \"Ejemplo: Leche con chocolate.\" },\r\n    { nombre: \"Leche descremada\", abreviatura: \"Leche Des\", definicion: \"Ejemplo: Leche descremada.\" },\r\n    { nombre: \"Leche entera\", abreviatura: \"\", definicion: \"Ejemplo: Leche entera.\" },\r\n    { nombre: \"Leche semi descremada\", abreviatura: \"Leche Semi\", definicion: \"Ejemplo: Leche semidescremada.\" },\r\n    { nombre: \"Leguminosas\", abreviatura: \"\", definicion: \"Ejemplo: Frijoles, lentejas.\" },\r\n    { nombre: \"Verduras\", abreviatura: \"\", definicion: \"Ejemplo: Espinacas, zanahorias.\" }\r\n];\r\n\r\nconst DisabledPatientForm = () => {\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Avatar\r\n                    alt=\"Preview\"\r\n                    src=\"https://via.placeholder.com/150\"\r\n                    sx={{ width: 100, height: 100, margin: '0 auto' }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Nombre\"\r\n                    variant=\"outlined\"\r\n                    name=\"nombre\"\r\n                    value=\"Ejemplo Nombre\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Apellido paterno\"\r\n                    variant=\"outlined\"\r\n                    name=\"apelPate\"\r\n                    value=\"Ejemplo Apellido\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Apellido materno\"\r\n                    variant=\"outlined\"\r\n                    name=\"apelMate\"\r\n                    value=\"Ejemplo Apellido\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Correo\"\r\n                    variant=\"outlined\"\r\n                    name=\"correo\"\r\n                    value=\"ejemplo@correo.com\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Número de teléfono\"\r\n                    variant=\"outlined\"\r\n                    name=\"numero\"\r\n                    value=\"1234567890\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Fecha de nacimiento\"\r\n                    variant=\"outlined\"\r\n                    type=\"date\"\r\n                    value=\"2000-01-01\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                    <InputLabel>Sexo</InputLabel>\r\n                    <Select\r\n                        value=\"hombre\"\r\n                        label=\"Sexo\"\r\n                        readOnly\r\n                        inputProps={{ readOnly: true }}\r\n                    >\r\n                        <MenuItem value=\"hombre\">Hombre</MenuItem>\r\n                        <MenuItem value=\"mujer\">Mujer</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                    <InputLabel>Actividad física</InputLabel>\r\n                    <Select\r\n                        value=\"sedentario\"\r\n                        label=\"Actividad física\"\r\n                        readOnly\r\n                        inputProps={{ readOnly: true }}\r\n                    >\r\n                        <MenuItem value=\"sedentario\">Sedentario</MenuItem>\r\n                        <MenuItem value=\"poco activo\">Poco activo</MenuItem>\r\n                        <MenuItem value=\"activo moderacion\">Activo con moderación</MenuItem>\r\n                        <MenuItem value=\"activo\">Activo</MenuItem>\r\n                        <MenuItem value=\"muy activo\">Muy activo</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Peso (kg)\"\r\n                    variant=\"outlined\"\r\n                    name=\"weight\"\r\n                    value=\"70\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Altura (cm)\"\r\n                    variant=\"outlined\"\r\n                    name=\"height\"\r\n                    value=\"170\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Circunferencia del brazo (cm)\"\r\n                    variant=\"outlined\"\r\n                    name=\"circunferencia_brazo\"\r\n                    value=\"30\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Pliegue cutáneo del tríceps (mm)\"\r\n                    variant=\"outlined\"\r\n                    name=\"pliegue_triceps\"\r\n                    value=\"10\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Ácido úrico (mg/dL)\"\r\n                    variant=\"outlined\"\r\n                    name=\"acidoUrico\"\r\n                    value=\"5.5\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Albúmina (g/dL)\"\r\n                    variant=\"outlined\"\r\n                    name=\"albumina\"\r\n                    value=\"4.5\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Colesterol (mg/dL)\"\r\n                    variant=\"outlined\"\r\n                    name=\"colesterol\"\r\n                    value=\"200\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Globulina (g/dL)\"\r\n                    variant=\"outlined\"\r\n                    name=\"globulina\"\r\n                    value=\"2.5\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Hematocrito (%)\"\r\n                    variant=\"outlined\"\r\n                    name=\"hematocrito\"\r\n                    value=\"45\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Proteínas totales (g/dL)\"\r\n                    variant=\"outlined\"\r\n                    name=\"proteinas\"\r\n                    value=\"7.0\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Tensión diastólica (mmHg)\"\r\n                    variant=\"outlined\"\r\n                    name=\"tension\"\r\n                    value=\"80\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Triglicéridos (mg/dL)\"\r\n                    variant=\"outlined\"\r\n                    name=\"triglicerido\"\r\n                    value=\"150\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n                    Porciones dietéticas\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"AOA AAG\"\r\n                    variant=\"outlined\"\r\n                    name=\"aoaAAG\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"AOA BAG\"\r\n                    variant=\"outlined\"\r\n                    name=\"aoaBAG\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"AOA MAG\"\r\n                    variant=\"outlined\"\r\n                    name=\"aoaMAG\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"AOA MBAG\"\r\n                    variant=\"outlined\"\r\n                    name=\"aoaMBAG\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Aceites C/P\"\r\n                    variant=\"outlined\"\r\n                    name=\"aceitesCP\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Aceites S/P\"\r\n                    variant=\"outlined\"\r\n                    name=\"aceitesSP\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Azúcar S/G\"\r\n                    variant=\"outlined\"\r\n                    name=\"azucarSG\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Cereales C/G\"\r\n                    variant=\"outlined\"\r\n                    name=\"cerealesCG\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Cereales S/G\"\r\n                    variant=\"outlined\"\r\n                    name=\"cerealesSG\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Frutas\"\r\n                    variant=\"outlined\"\r\n                    name=\"frutas\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Leche C/A\"\r\n                    variant=\"outlined\"\r\n                    name=\"lecheCA\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Leche Des\"\r\n                    variant=\"outlined\"\r\n                    name=\"lecheDes\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Leche Entera\"\r\n                    variant=\"outlined\"\r\n                    name=\"lecheEntera\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Leche Semi\"\r\n                    variant=\"outlined\"\r\n                    name=\"lecheSemi\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Leguminosas\"\r\n                    variant=\"outlined\"\r\n                    name=\"leguminosas\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Verduras\"\r\n                    variant=\"outlined\"\r\n                    name=\"verduras\"\r\n                    value=\"Ejemplo\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst DisabledLoginForm = () => {\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Avatar\r\n                    alt=\"Logo\"\r\n                    src=\"https://via.placeholder.com/150\"\r\n                    sx={{ width: 100, height: 100, margin: '0 auto' }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Dirección de correo electrónico\"\r\n                    variant=\"outlined\"\r\n                    name=\"email\"\r\n                    value=\"ejemplo@correo.com\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Contraseña\"\r\n                    variant=\"outlined\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value=\"password123\"\r\n                    InputProps={{ readOnly: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    disabled\r\n                >\r\n                    Iniciar sesión\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"body2\" align=\"center\">\r\n                    <Button color=\"primary\" disabled>\r\n                        ¿Olvidaste tu contraseña?\r\n                    </Button>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"body2\" align=\"center\">\r\n                    <Button color=\"primary\" disabled>\r\n                        ¿No tienes una cuenta? Regístrate\r\n                    </Button>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"body2\" align=\"center\">\r\n                    <Button color=\"primary\" disabled>\r\n                        Términos de uso y política de privacidad\r\n                    </Button>\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst TourManual = () => {\r\n    return (\r\n        <RootContainer>\r\n            <StyledCard>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Manual de usuario\r\n                </Typography>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                    Glosario\r\n                </Typography>\r\n                <Typography variant=\"body1\" paragraph justifyContent={true}>\r\n                    Una porción equivalente de un alimento es una cantidad estándar que representa su valor nutricional de manera uniforme. Facilita la comparación entre diferentes alimentos en términos de nutrientes como calorías, proteínas, carbohidratos y grasas. Ayuda a planificar dietas equilibradas y a controlar las ingestas dietéticas de manera sencilla.\r\n                </Typography>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>No.</TableCell>\r\n                            <TableCell>Nombre</TableCell>\r\n                            <TableCell>Abreviatura</TableCell>\r\n                            <TableCell>Ejemplo</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {glossaryData.map((item, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell>{index + 1}</TableCell>\r\n                                <TableCell>{item.nombre}</TableCell>\r\n                                <TableCell>{item.abreviatura}</TableCell>\r\n                                <TableCell>{item.definicion}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <CardContent>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                Ejemplo del componente de inicio de sesión\r\n                            </Typography>\r\n                            <Box mt={0}>\r\n                                <DisabledLoginForm />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ExplanationBox>\r\n                                <Typography variant=\"body1\" paragraph>\r\n                                    {explanationTextLogin.split('\\n').map((line, index) => (\r\n                                        <span key={index}>\r\n                                            {line}\r\n                                            <br />\r\n                                        </span>\r\n                                    ))}\r\n                                </Typography>\r\n                            </ExplanationBox>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={3} mt={4}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                Ejemplo del componente de registro de paciente\r\n                            </Typography>\r\n                            <Box mt={0}>\r\n                                <DisabledPatientForm />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ExplanationBox>\r\n                                <Typography variant=\"body1\" paragraph>\r\n                                    {explanationTextPatient.split('\\n').map((line, index) => (\r\n                                        <span key={index}>\r\n                                            {line}\r\n                                            <br />\r\n                                        </span>\r\n                                    ))}\r\n                                </Typography>\r\n                            </ExplanationBox>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </StyledCard>\r\n        </RootContainer>\r\n    );\r\n};\r\n\r\nexport default TourManual;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["createSvgIcon","_jsx","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","colorDefault","_ref","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","_extends","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useDefaultProps","alt","children","childrenProp","className","component","slots","slotProps","imgProps","sizes","src","srcSet","other","_objectWithoutPropertiesLoose","loaded","_ref2","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","composeClasses","useUtilityClasses","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps","as","clsx","RootContainer","Container","flexDirection","minHeight","padding","spacing","StyledCard","Card","maxWidth","marginTop","ExplanationBox","Paper","_ref3","paper","boxShadow","shadows","marginLeft","glossaryData","nombre","abreviatura","definicion","DisabledPatientForm","_jsxs","Grid","container","item","xs","sx","margin","sm","TextField","fullWidth","label","value","InputProps","readOnly","type","FormControl","InputLabel","Select","inputProps","MenuItem","Typography","align","gutterBottom","DisabledLoginForm","Button","disabled","TourManual","paragraph","Table","TableHead","TableRow","TableCell","TableBody","map","index","CardContent","md","Box","mt","split","line","getMenuItemUtilityClass","MenuItemRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","dense","divider","disableGutters","gutters","body1","textDecoration","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","concat","backgroundClip","action","hover","menuItemClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginBottom","inset","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","autoFocus","focusVisibleClassName","role","tabIndex","tabIndexProp","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","composedClasses","handleRef","useForkRef","undefined","Provider"],"sourceRoot":""}