{"version":3,"file":"static/js/900.88bfdc48.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection = new ProjectionNodeConstructor(this.latestValues, renderedProps[\"data-framer-portal-id\"]\n                ? undefined\n                : getClosestProjectingNode(this.parent));\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.10\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","postRender","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}